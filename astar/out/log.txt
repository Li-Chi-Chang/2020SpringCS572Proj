pushQ	( 0, 0),dir:0

pushQ	( 0, 0),dir:1

In dijkstra function.>>>
Print Queue(2):
top
	(0,0),dir:0
	(0,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
In dijkstra function.<<<
popQ	( 0, 0),dir:0

push new paths to queue
current location:    ( 0,10)
current NESW:        ( 1, 0, 0, 1)
mouse NESW:          ( 1, 0, 0, 1) head: 0

pushQ	( 0,10),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
out dijkstra<<<
In dijkstra function.>>>
Print Queue(2):
top
	(0,0),dir:1
	(0,10),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
In dijkstra function.<<<
popQ	( 0, 0),dir:1

need to go to other node
queuedata.locationX:0 location[WIDTH]:0
queuedata.locationY:0 location[HEIGHT]:10
Go parent!
found!
need to go to other node>>>
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
need to go to other node<<<
location: x:0, y:10
parentX:99, parentY:99
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
cross: 10
location1: x:0, y:0
in while<<
location: x:0, y:0
parentX:0, parentY:10
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    ( 3, 0)
current NESW:        ( 0, 0, 1, 0)
mouse NESW:          ( 0, 1, 0, 0) head: 1

pushQ	( 3, 0),dir:0

pushQ	( 3, 0),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(3):
top
	(0,10),dir:1
	(3,0),dir:0
	(3,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
In dijkstra function.<<<
popQ	( 0,10),dir:1

need to go to other node
queuedata.locationX:0 location[WIDTH]:3
queuedata.locationY:10 location[HEIGHT]:0
Go parent!
go to cross:0
found!
need to go to other node>>>
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
need to go to other node<<<
location: x:3, y:0
parentX:99, parentY:99
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
cross: 10
location1: x:0, y:0
in while<<
location: x:0, y:0
parentX:3, parentY:0
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
cross: 0
location2: x:0, y:10
in while<<
location: x:0, y:10
parentX:0, parentY:0
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
cross: 10
go to dest
push new paths to queue
current location:    ( 0,16)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 0, 0, 1) head: 0

pushQ	( 0,16),dir:0

pushQ	( 0,16),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(4):
top
	(3,0),dir:0
	(3,0),dir:1
	(0,16),dir:0
	(0,16),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
In dijkstra function.<<<
popQ	( 3, 0),dir:0

need to go to other node
queuedata.locationX:3 location[WIDTH]:0
queuedata.locationY:0 location[HEIGHT]:16
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 1000000000
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
need to go to other node<<<
location: x:0, y:16
parentX:99, parentY:99
this node:	( 0,16)	cost: 1000000000
	parent:       ( 0,10)   dir:2
cross: 10
location1: x:0, y:10
in while<<
location: x:0, y:10
parentX:0, parentY:16
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
cross: 10
location1: x:0, y:0
in while<<
location: x:0, y:0
parentX:0, parentY:10
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
cross: 1
location2: x:3, y:0
in while<<
location: x:3, y:0
parentX:0, parentY:0
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    ( 3,16)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 0

pushQ	( 3,16),dir:1

pushQ	( 3,16),dir:3

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
out dijkstra<<<
In dijkstra function.>>>
Print Queue(5):
top
	(3,0),dir:1
	(0,16),dir:0
	(0,16),dir:1
	(3,16),dir:1
	(3,16),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
In dijkstra function.<<<
popQ	( 3, 0),dir:1

need to go to other node
queuedata.locationX:3 location[WIDTH]:3
queuedata.locationY:0 location[HEIGHT]:16
Go parent!
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
need to go to other node<<<
location: x:3, y:16
parentX:99, parentY:99
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:3, parentY:16
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    ( 7, 6)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 0, 0, 0, 1) head: 1

pushQ	( 7, 6),dir:1

pushQ	( 7, 6),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(0,16),dir:0
	(0,16),dir:1
	(3,16),dir:1
	(3,16),dir:3
	(7,6),dir:1
	(7,6),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
In dijkstra function.<<<
popQ	( 0,16),dir:0

need to go to other node
queuedata.locationX:0 location[WIDTH]:7
queuedata.locationY:16 location[HEIGHT]:6
Go parent!
Go parent!
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 1000000000
	parent:       ( 0,10)   dir:2
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
need to go to other node<<<
location: x:7, y:6
parentX:99, parentY:99
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:7, parentY:6
this node:	( 3, 0)	cost: 1000000000
	parent:       ( 0, 0)   dir:3
cross: 10
location1: x:0, y:0
in while<<
location: x:0, y:0
parentX:3, parentY:0
this node:	( 0, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
cross: 0
location2: x:0, y:10
in while<<
location: x:0, y:10
parentX:0, parentY:0
this node:	( 0,10)	cost: 1000000000
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
cross: 0
location2: x:0, y:16
in while<<
location: x:0, y:16
parentX:0, parentY:10
this node:	( 0,16)	cost: 1000000000
	parent:       ( 0,10)   dir:2
cross: 10
go to dest
push new paths to queue
current location:    ( 9,18)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 0

pushQ	( 9,18),dir:1

pushQ	( 9,18),dir:3

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(0,16),dir:1
	(3,16),dir:1
	(3,16),dir:3
	(7,6),dir:1
	(7,6),dir:2
	(9,18),dir:1
	(9,18),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
In dijkstra function.<<<
popQ	( 0,16),dir:1

need to go to other node
queuedata.locationX:0 location[WIDTH]:9
queuedata.locationY:16 location[HEIGHT]:18
Go parent!
found!
need to go to other node>>>
this node:	( 0,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
need to go to other node<<<
location: x:9, y:18
parentX:99, parentY:99
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
cross: 10
location1: x:0, y:16
in while<<
location: x:0, y:16
parentX:9, parentY:18
this node:	( 0,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 9,18)   dir:0
cross: 10
go to dest
do the min path algo
the cost of node:( 3,16), cost:46
the cost of node:( 3,16), cost:19
crossPoint:
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
tree:
this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
	cross[0]:    ( 9,18)   dir:0
treeParent:
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	cross[0]:    ( 0,16)   dir:1

this node:	( 0,16)	cost: 36
	parent:       ( 0,10)   dir:2
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2

this node:	( 0,16)	cost: 36
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(3,16),dir:1
	(3,16),dir:3
	(7,6),dir:1
	(7,6),dir:2
	(9,18),dir:1
	(9,18),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
In dijkstra function.<<<
popQ	( 3,16),dir:1

push new paths to queue
current location:    ( 4,16)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 0, 0, 0, 1) head: 1

pushQ	( 4,16),dir:1

pushQ	( 4,16),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(3,16),dir:3
	(7,6),dir:1
	(7,6),dir:2
	(9,18),dir:1
	(9,18),dir:3
	(4,16),dir:1
	(4,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
In dijkstra function.<<<
popQ	( 3,16),dir:3

this edge is searched
In dijkstra function.>>>
Print Queue(6):
top
	(7,6),dir:1
	(7,6),dir:2
	(9,18),dir:1
	(9,18),dir:3
	(4,16),dir:1
	(4,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
In dijkstra function.<<<
popQ	( 7, 6),dir:1

need to go to other node
queuedata.locationX:7 location[WIDTH]:4
queuedata.locationY:6 location[HEIGHT]:16
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
need to go to other node<<<
location: x:4, y:16
parentX:99, parentY:99
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:4, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:3, parentY:16
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 1
location2: x:7, y:6
in while<<
location: x:7, y:6
parentX:3, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    ( 8, 6)
current NESW:        ( 0, 1, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 1

pushQ	( 8, 6),dir:0

pushQ	( 8, 6),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(7,6),dir:2
	(9,18),dir:1
	(9,18),dir:3
	(4,16),dir:1
	(4,16),dir:2
	(8,6),dir:0
	(8,6),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
In dijkstra function.<<<
popQ	( 7, 6),dir:2

need to go to other node
queuedata.locationX:7 location[WIDTH]:8
queuedata.locationY:6 location[HEIGHT]:6
Go parent!
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
need to go to other node<<<
location: x:8, y:6
parentX:99, parentY:99
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:8, parentY:6
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    ( 5, 0)
current NESW:        ( 0, 0, 1, 1)
mouse NESW:          ( 1, 1, 0, 0) head: 2

pushQ	( 5, 0),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(9,18),dir:1
	(9,18),dir:3
	(4,16),dir:1
	(4,16),dir:2
	(8,6),dir:0
	(8,6),dir:2
	(5,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 9,18),dir:1

need to go to other node
queuedata.locationX:9 location[WIDTH]:5
queuedata.locationY:18 location[HEIGHT]:0
Go parent!
Go parent!
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
need to go to other node<<<
location: x:5, y:0
parentX:99, parentY:99
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:5, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:7, parentY:6
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 0
location2: x:3, y:16
in while<<
location: x:3, y:16
parentX:3, parentY:0
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 0
location2: x:0, y:16
in while<<
location: x:0, y:16
parentX:3, parentY:16
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 0
location2: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:16
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
cross: 10
go to dest
push new paths to queue
current location:    (18,18)
current NESW:        ( 1, 0, 1, 0)
mouse NESW:          ( 0, 1, 0, 1) head: 1

pushQ	(18,18),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(9,18),dir:3
	(4,16),dir:1
	(4,16),dir:2
	(8,6),dir:0
	(8,6),dir:2
	(5,0),dir:1
	(18,18),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 9,18),dir:3

need to go to other node
queuedata.locationX:9 location[WIDTH]:18
queuedata.locationY:18 location[HEIGHT]:18
Go parent!
found!
need to go to other node>>>
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
need to go to other node<<<
location: x:18, y:18
parentX:99, parentY:99
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:18, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    ( 0,18)
current NESW:        ( 0, 0, 1, 1)
mouse NESW:          ( 1, 0, 0, 1) head: 3

pushQ	( 0,18),dir:0

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(4,16),dir:1
	(4,16),dir:2
	(8,6),dir:0
	(8,6),dir:2
	(5,0),dir:1
	(18,18),dir:1
	(0,18),dir:0
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 4,16),dir:1

need to go to other node
queuedata.locationX:4 location[WIDTH]:0
queuedata.locationY:16 location[HEIGHT]:18
Go parent!
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 3,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
need to go to other node<<<
location: x:0, y:18
parentX:99, parentY:99
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
cross: 10
location1: x:0, y:16
in while<<
location: x:0, y:16
parentX:9, parentY:18
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:0, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
cross: 1
location2: x:4, y:16
in while<<
location: x:4, y:16
parentX:3, parentY:16
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    ( 8,10)
current NESW:        ( 0, 1, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 1

pushQ	( 8,10),dir:0

pushQ	( 8,10),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(4,16),dir:2
	(8,6),dir:0
	(8,6),dir:2
	(5,0),dir:1
	(18,18),dir:1
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 4,16),dir:2

need to go to other node
queuedata.locationX:4 location[WIDTH]:8
queuedata.locationY:16 location[HEIGHT]:10
Go parent!
found!
need to go to other node>>>
this node:	( 4,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8,10)   dir:1
this node:	( 8,10)	cost: 1000000000
	parent:       ( 4,16)   dir:3
need to go to other node<<<
location: x:8, y:10
parentX:99, parentY:99
this node:	( 8,10)	cost: 1000000000
	parent:       ( 4,16)   dir:3
cross: 10
location1: x:4, y:16
in while<<
location: x:4, y:16
parentX:8, parentY:10
this node:	( 4,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8,10)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    ( 7, 9)
current NESW:        ( 1, 1, 1, 0)
mouse NESW:          ( 1, 1, 0, 1) head: 1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(8,6),dir:0
	(8,6),dir:2
	(5,0),dir:1
	(18,18),dir:1
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 8, 6),dir:0

need to go to other node
queuedata.locationX:8 location[WIDTH]:7
queuedata.locationY:6 location[HEIGHT]:9
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
need to go to other node<<<
location: x:7, y:9
parentX:99, parentY:99
this node:	( 7, 9)	cost: 1000000000
	parent:       ( 4,16)   dir:3
cross: 10
location1: x:4, y:16
in while<<
location: x:4, y:16
parentX:7, parentY:9
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:4, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:3, parentY:16
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 1
location2: x:7, y:6
in while<<
location: x:7, y:6
parentX:3, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
cross: 0
location2: x:8, y:6
in while<<
location: x:8, y:6
parentX:7, parentY:6
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    ( 8, 7)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 0, 0, 1) head: 0

pushQ	( 8, 7),dir:0

pushQ	( 8, 7),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(8,6),dir:2
	(5,0),dir:1
	(18,18),dir:1
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 8, 6),dir:2

need to go to other node
queuedata.locationX:8 location[WIDTH]:8
queuedata.locationY:6 location[HEIGHT]:7
Go parent!
found!
need to go to other node>>>
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
need to go to other node<<<
location: x:8, y:7
parentX:99, parentY:99
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:7
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    ( 8, 2)
current NESW:        ( 0, 0, 1, 1)
mouse NESW:          ( 1, 1, 0, 0) head: 2

pushQ	( 8, 2),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(5,0),dir:1
	(18,18),dir:1
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
In dijkstra function.<<<
popQ	( 5, 0),dir:1

need to go to other node
queuedata.locationX:5 location[WIDTH]:8
queuedata.locationY:0 location[HEIGHT]:2
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
need to go to other node<<<
location: x:8, y:2
parentX:99, parentY:99
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:8, parentY:6
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
cross: 1
location2: x:5, y:0
in while<<
location: x:5, y:0
parentX:7, parentY:6
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    ( 8, 0)
current NESW:        ( 0, 0, 1, 0)
mouse NESW:          ( 0, 1, 0, 0) head: 1

pushQ	( 8, 0),dir:0

pushQ	( 8, 0),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(9):
top
	(18,18),dir:1
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	(18,18),dir:1

need to go to other node
queuedata.locationX:18 location[WIDTH]:8
queuedata.locationY:18 location[HEIGHT]:0
Go parent!
Go parent!
Go parent!
go to cross:0
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
need to go to other node<<<
location: x:8, y:0
parentX:99, parentY:99
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
cross: 10
location1: x:5, y:0
in while<<
location: x:5, y:0
parentX:8, parentY:0
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:5, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:7, parentY:6
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 0
location2: x:3, y:16
in while<<
location: x:3, y:16
parentX:3, parentY:0
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 0
location2: x:0, y:16
in while<<
location: x:0, y:16
parentX:3, parentY:16
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 0
location2: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:16
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
cross: 0
location2: x:18, y:18
in while<<
location: x:18, y:18
parentX:9, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (19,18)
current NESW:        ( 0, 1, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 1

pushQ	(19,18),dir:0

pushQ	(19,18),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(0,18),dir:0
	(8,10),dir:0
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 0,18),dir:0

need to go to other node
queuedata.locationX:0 location[WIDTH]:19
queuedata.locationY:18 location[HEIGHT]:18
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
need to go to other node<<<
location: x:19, y:18
parentX:99, parentY:99
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
cross: 10
location1: x:18, y:18
in while<<
location: x:18, y:18
parentX:19, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:18, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
cross: 1
location2: x:0, y:18
in while<<
location: x:0, y:18
parentX:9, parentY:18
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    ( 0,19)
current NESW:        ( 1, 0, 0, 1)
mouse NESW:          ( 1, 0, 0, 1) head: 0

pushQ	( 0,19),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(8,10),dir:0
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8,10),dir:0

need to go to other node
queuedata.locationX:8 location[WIDTH]:0
queuedata.locationY:10 location[HEIGHT]:19
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
found!
need to go to other node>>>
this node:	( 3,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
this node:	( 8,10)	cost: 1000000000
	parent:       ( 4,16)   dir:3
need to go to other node<<<
location: x:0, y:19
parentX:99, parentY:99
this node:	( 0,19)	cost: 1000000000
	parent:       ( 0,18)   dir:2
cross: 10
location1: x:0, y:18
in while<<
location: x:0, y:18
parentX:0, parentY:19
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
cross: 10
location1: x:0, y:16
in while<<
location: x:0, y:16
parentX:9, parentY:18
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:0, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
cross: 1
location2: x:4, y:16
in while<<
location: x:4, y:16
parentX:3, parentY:16
this node:	( 4,16)	cost: 1000000000
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
cross: 0
location2: x:8, y:10
in while<<
location: x:8, y:10
parentX:4, parentY:16
this node:	( 8,10)	cost: 1000000000
	parent:       ( 4,16)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (12,16)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 0, 0, 0, 1) head: 1

pushQ	(12,16),dir:1

pushQ	(12,16),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(11):
top
	(8,10),dir:2
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8,10),dir:2

need to go to other node
queuedata.locationX:8 location[WIDTH]:12
queuedata.locationY:10 location[HEIGHT]:16
Go parent!
found!
need to go to other node>>>
this node:	( 8,10)	cost: 1000000000
	parent:       NULL
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
need to go to other node<<<
location: x:12, y:16
parentX:99, parentY:99
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
cross: 10
location1: x:8, y:10
in while<<
location: x:8, y:10
parentX:12, parentY:16
this node:	( 8,10)	cost: 1000000000
	parent:       NULL
	cross[0]:    (12,16)   dir:0
cross: 10
go to dest
do the min path algo
the cost of node:( 8, 7), cost:42
the cost of node:( 8, 7), cost:23
crossPoint:
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
tree:
this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
	cross[0]:    (12,16)   dir:0
treeParent:
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    ( 8,10)   dir:1
	cross[1]:    ( 7, 9)   dir:2

this node:	( 8,10)	cost: 22
	parent:       ( 4,16)   dir:3
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3

this node:	( 8,10)	cost: 22
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(8,7),dir:0
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8, 7),dir:0

this edge is searched
In dijkstra function.>>>
Print Queue(9):
top
	(8,7),dir:1
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8, 7),dir:1

push new paths to queue
current location:    (12, 7)
current NESW:        ( 0, 1, 0, 0)
mouse NESW:          ( 1, 0, 0, 0) head: 1

pushQ	(12, 7),dir:0

pushQ	(12, 7),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(8,2),dir:1
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8, 2),dir:1

need to go to other node
queuedata.locationX:8 location[WIDTH]:12
queuedata.locationY:2 location[HEIGHT]:7
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
need to go to other node<<<
location: x:12, y:7
parentX:99, parentY:99
this node:	(12, 7)	cost: 1000000000
	parent:       ( 8, 7)   dir:3
cross: 10
location1: x:8, y:7
in while<<
location: x:8, y:7
parentX:12, parentY:7
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:7
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
cross: 1
location2: x:8, y:2
in while<<
location: x:8, y:2
parentX:8, parentY:6
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (12, 2)
current NESW:        ( 0, 1, 1, 0)
mouse NESW:          ( 1, 1, 0, 0) head: 1

pushQ	(12, 2),dir:0

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(8,0),dir:0
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
In dijkstra function.<<<
popQ	( 8, 0),dir:0

need to go to other node
queuedata.locationX:8 location[WIDTH]:12
queuedata.locationY:0 location[HEIGHT]:2
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
need to go to other node<<<
location: x:12, y:2
parentX:99, parentY:99
this node:	(12, 2)	cost: 1000000000
	parent:       ( 8, 2)   dir:3
cross: 10
location1: x:8, y:2
in while<<
location: x:8, y:2
parentX:12, parentY:2
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:8, parentY:6
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
cross: 1
location2: x:5, y:0
in while<<
location: x:5, y:0
parentX:7, parentY:6
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 0
location2: x:8, y:0
in while<<
location: x:8, y:0
parentX:5, parentY:0
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    ( 8, 1)
current NESW:        ( 1, 0, 0, 1)
mouse NESW:          ( 1, 0, 0, 1) head: 0

pushQ	( 8, 1),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(8,0),dir:1
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
In dijkstra function.<<<
popQ	( 8, 0),dir:1

need to go to other node
queuedata.locationX:8 location[WIDTH]:8
queuedata.locationY:0 location[HEIGHT]:1
Go parent!
found!
need to go to other node>>>
this node:	( 8, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
need to go to other node<<<
location: x:8, y:1
parentX:99, parentY:99
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
cross: 10
location1: x:8, y:0
in while<<
location: x:8, y:0
parentX:8, parentY:1
this node:	( 8, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 1)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    ( 9, 0)
current NESW:        ( 1, 0, 1, 0)
mouse NESW:          ( 0, 1, 0, 1) head: 1

pushQ	( 9, 0),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(19,18),dir:0
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(19,18),dir:0

need to go to other node
queuedata.locationX:19 location[WIDTH]:9
queuedata.locationY:18 location[HEIGHT]:0
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
need to go to other node<<<
location: x:9, y:0
parentX:99, parentY:99
this node:	( 9, 0)	cost: 1000000000
	parent:       ( 8, 0)   dir:3
cross: 10
location1: x:8, y:0
in while<<
location: x:8, y:0
parentX:9, parentY:0
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
cross: 10
location1: x:5, y:0
in while<<
location: x:5, y:0
parentX:8, parentY:0
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:5, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:7, parentY:6
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 0
location2: x:3, y:16
in while<<
location: x:3, y:16
parentX:3, parentY:0
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 0
location2: x:0, y:16
in while<<
location: x:0, y:16
parentX:3, parentY:16
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 0
location2: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:16
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
cross: 0
location2: x:18, y:18
in while<<
location: x:18, y:18
parentX:9, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 0
location2: x:19, y:18
in while<<
location: x:19, y:18
parentX:18, parentY:18
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (19,19)
current NESW:        ( 2, 1, 0, 0)
mouse NESW:          ( 2, 1, 0, 0) head: 0

pushQ	(19,19),dir:3

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(19,18),dir:2
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(19,18),dir:2

need to go to other node
queuedata.locationX:19 location[WIDTH]:19
queuedata.locationY:18 location[HEIGHT]:19
Go parent!
found!
need to go to other node>>>
this node:	(19,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19,19)   dir:0
this node:	(19,19)	cost: 1000000000
	parent:       (19,18)   dir:2
need to go to other node<<<
location: x:19, y:19
parentX:99, parentY:99
this node:	(19,19)	cost: 1000000000
	parent:       (19,18)   dir:2
cross: 10
location1: x:19, y:18
in while<<
location: x:19, y:18
parentX:19, parentY:19
this node:	(19,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19,19)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (19,17)
current NESW:        ( 0, 1, 1, 0)
mouse NESW:          ( 1, 0, 0, 1) head: 2

pushQ	(19,17),dir:3

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(0,19),dir:1
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	( 0,19),dir:1

need to go to other node
queuedata.locationX:0 location[WIDTH]:19
queuedata.locationY:19 location[HEIGHT]:17
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
found!
need to go to other node>>>
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
this node:	( 0,19)	cost: 1000000000
	parent:       ( 0,18)   dir:2
need to go to other node<<<
location: x:19, y:17
parentX:99, parentY:99
this node:	(19,17)	cost: 1000000000
	parent:       (19,18)   dir:0
cross: 10
location1: x:19, y:18
in while<<
location: x:19, y:18
parentX:19, parentY:17
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
cross: 10
location1: x:18, y:18
in while<<
location: x:18, y:18
parentX:19, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:18, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       NULL
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
cross: 1
location2: x:0, y:18
in while<<
location: x:0, y:18
parentX:9, parentY:18
this node:	( 0,18)	cost: 1000000000
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0
cross: 0
location2: x:0, y:19
in while<<
location: x:0, y:19
parentX:0, parentY:18
this node:	( 0,19)	cost: 1000000000
	parent:       ( 0,18)   dir:2
cross: 10
go to dest
do the min path algo
the cost of node:(19,19), cost:43
the cost of node:(19,19), cost:44
crossPoint:
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
tree:
this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
treeParent:
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	cross[0]:    ( 0,19)   dir:0

this node:	( 0,19)	cost: 1
	parent:       ( 0,18)   dir:2
	unchoose[0]:    ( 0,18)   dir:2

this node:	( 0,19)	cost: 1
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(9):
top
	(12,16),dir:1
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(12,16),dir:1

need to go to other node
queuedata.locationX:12 location[WIDTH]:19
queuedata.locationY:16 location[HEIGHT]:19
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
this node:	(19,19)	cost: 1000000000
	parent:       (19,18)   dir:2
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
need to go to other node<<<
location: x:19, y:19
parentX:99, parentY:99
this node:	(19,19)	cost: 1000000000
	parent:       (19,18)   dir:2
cross: 10
location1: x:19, y:18
in while<<
location: x:19, y:18
parentX:19, parentY:19
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
cross: 10
location1: x:18, y:18
in while<<
location: x:18, y:18
parentX:19, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:18, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
cross: 10
location1: x:0, y:16
in while<<
location: x:0, y:16
parentX:9, parentY:18
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:0, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:3, parentY:16
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 1
location2: x:7, y:6
in while<<
location: x:7, y:6
parentX:3, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
cross: 0
location2: x:8, y:6
in while<<
location: x:8, y:6
parentX:7, parentY:6
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
cross: 0
location2: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:6
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
cross: 0
location2: x:8, y:10
in while<<
location: x:8, y:10
parentX:8, parentY:7
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 0
location2: x:12, y:16
in while<<
location: x:12, y:16
parentX:8, parentY:10
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (16,16)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 0, 0, 0, 1) head: 1

pushQ	(16,16),dir:1

pushQ	(16,16),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(12,16),dir:2
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(12,16),dir:2

need to go to other node
queuedata.locationX:12 location[WIDTH]:16
queuedata.locationY:16 location[HEIGHT]:16
Go parent!
found!
need to go to other node>>>
this node:	(12,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
need to go to other node<<<
location: x:16, y:16
parentX:99, parentY:99
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
cross: 10
location1: x:12, y:16
in while<<
location: x:12, y:16
parentX:16, parentY:16
this node:	(12,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16,16)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    ( 9,12)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 1, 0, 0) head: 2

pushQ	( 9,12),dir:1

pushQ	( 9,12),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(11):
top
	(12,7),dir:0
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(12, 7),dir:0

need to go to other node
queuedata.locationX:12 location[WIDTH]:9
queuedata.locationY:7 location[HEIGHT]:12
Go parent!
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 8, 7)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
this node:	(12, 7)	cost: 1000000000
	parent:       ( 8, 7)   dir:3
need to go to other node<<<
location: x:9, y:12
parentX:99, parentY:99
this node:	( 9,12)	cost: 1000000000
	parent:       (12,16)   dir:0
cross: 10
location1: x:12, y:16
in while<<
location: x:12, y:16
parentX:9, parentY:12
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
cross: 10
location1: x:8, y:10
in while<<
location: x:8, y:10
parentX:12, parentY:16
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 10
location1: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:10
this node:	( 8, 7)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
cross: 1
location2: x:12, y:7
in while<<
location: x:12, y:7
parentX:8, parentY:7
this node:	(12, 7)	cost: 1000000000
	parent:       ( 8, 7)   dir:3
cross: 10
go to dest
do the min path algo
the cost of node:( 9,12), cost:27
the cost of node:( 9,12), cost:49
crossPoint:
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
tree:
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
treeParent:
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
change the cross!0
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	unchoose[0]:    (12, 7)   dir:1
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	unchoose[0]:    ( 9,12)   dir:0
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(10):
top
	(12,7),dir:2
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	unchoose[0]:    (12, 7)   dir:1
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	unchoose[0]:    ( 9,12)   dir:0
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(12, 7),dir:2

need to go to other node
queuedata.locationX:12 location[WIDTH]:9
queuedata.locationY:7 location[HEIGHT]:12
found!
need to go to other node>>>
this node:	(12, 7)	cost: 1000000000
	parent:       NULL
need to go to other node<<<
location: x:9, y:12
parentX:99, parentY:99
this node:	(12, 7)	cost: 1000000000
	parent:       NULL
cross: 10
go to dest
push new paths to queue
current location:    ( 9, 8)
current NESW:        ( 0, 1, 1, 1)
mouse NESW:          ( 1, 1, 0, 1) head: 2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	unchoose[0]:    ( 9,12)   dir:0
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(9):
top
	(12,2),dir:0
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	unchoose[0]:    ( 9,12)   dir:0
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	(12, 2),dir:0

need to go to other node
queuedata.locationX:12 location[WIDTH]:9
queuedata.locationY:2 location[HEIGHT]:8
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
found!
need to go to other node>>>
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
this node:	(12, 2)	cost: 1000000000
	parent:       ( 8, 2)   dir:3
need to go to other node<<<
location: x:9, y:8
parentX:99, parentY:99
this node:	( 9, 8)	cost: 1000000000
	parent:       ( 9,12)   dir:0
cross: 10
location1: x:9, y:12
in while<<
location: x:9, y:12
parentX:9, parentY:8
this node:	( 9,12)	cost: 1000000000
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
cross: 10
location1: x:12, y:16
in while<<
location: x:12, y:16
parentX:9, parentY:12
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
cross: 10
location1: x:8, y:10
in while<<
location: x:8, y:10
parentX:12, parentY:16
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 10
location1: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:10
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:7
this node:	( 8, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
cross: 1
location2: x:8, y:2
in while<<
location: x:8, y:2
parentX:8, parentY:6
this node:	( 8, 2)	cost: 1000000000
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1
cross: 0
location2: x:12, y:2
in while<<
location: x:12, y:2
parentX:8, parentY:2
this node:	(12, 2)	cost: 1000000000
	parent:       ( 8, 2)   dir:3
cross: 10
go to dest
do the min path algo
the cost of node:(12, 7), cost:30
the cost of node:(12, 7), cost:27
crossPoint:
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	unchoose[0]:    ( 9,12)   dir:0
tree:
this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
treeParent:
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	cross[0]:    (12, 2)   dir:1

this node:	(12, 2)	cost: 4
	parent:       ( 8, 2)   dir:3
	unchoose[0]:    ( 8, 2)   dir:3

this node:	(12, 2)	cost: 4
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(8,1),dir:1
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	( 8, 1),dir:1

need to go to other node
queuedata.locationX:8 location[WIDTH]:12
queuedata.locationY:1 location[HEIGHT]:7
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
need to go to other node<<<
location: x:12, y:7
parentX:99, parentY:99
this node:	(12, 7)	cost: 1000000000
	parent:       ( 8, 7)   dir:3
cross: 10
location1: x:8, y:7
in while<<
location: x:8, y:7
parentX:12, parentY:7
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:7
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:8, parentY:6
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
cross: 1
location2: x:5, y:0
in while<<
location: x:5, y:0
parentX:7, parentY:6
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 0
location2: x:8, y:0
in while<<
location: x:8, y:0
parentX:5, parentY:0
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
cross: 0
location2: x:8, y:1
in while<<
location: x:8, y:1
parentX:8, parentY:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
cross: 10
go to dest
push new paths to queue
current location:    (13, 1)
current NESW:        ( 0, 0, 1, 0)
mouse NESW:          ( 0, 1, 0, 0) head: 1

pushQ	(13, 1),dir:0

pushQ	(13, 1),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(9):
top
	(9,0),dir:1
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
In dijkstra function.<<<
popQ	( 9, 0),dir:1

need to go to other node
queuedata.locationX:9 location[WIDTH]:13
queuedata.locationY:0 location[HEIGHT]:1
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	( 8, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1000000000
	parent:       ( 8, 0)   dir:3
need to go to other node<<<
location: x:13, y:1
parentX:99, parentY:99
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
cross: 10
location1: x:8, y:1
in while<<
location: x:8, y:1
parentX:13, parentY:1
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
cross: 10
location1: x:8, y:0
in while<<
location: x:8, y:0
parentX:8, parentY:1
this node:	( 8, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
cross: 1
location2: x:9, y:0
in while<<
location: x:9, y:0
parentX:8, parentY:0
this node:	( 9, 0)	cost: 1000000000
	parent:       ( 8, 0)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (15, 0)
current NESW:        ( 1, 1, 1, 0)
mouse NESW:          ( 1, 1, 0, 1) head: 1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(19,19),dir:3
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(19,19),dir:3

this edge is searched
In dijkstra function.>>>
Print Queue(7):
top
	(19,17),dir:3
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(19,17),dir:3

need to go to other node
queuedata.locationX:19 location[WIDTH]:15
queuedata.locationY:17 location[HEIGHT]:0
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:1
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
need to go to other node<<<
location: x:15, y:0
parentX:99, parentY:99
this node:	(15, 0)	cost: 1000000000
	parent:       ( 9, 0)   dir:3
cross: 10
location1: x:9, y:0
in while<<
location: x:9, y:0
parentX:15, parentY:0
this node:	( 9, 0)	cost: 1000000000
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
cross: 10
location1: x:8, y:0
in while<<
location: x:8, y:0
parentX:9, parentY:0
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
cross: 10
location1: x:5, y:0
in while<<
location: x:5, y:0
parentX:8, parentY:0
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:5, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:7, parentY:6
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 0
location2: x:3, y:16
in while<<
location: x:3, y:16
parentX:3, parentY:0
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 0
location2: x:0, y:16
in while<<
location: x:0, y:16
parentX:3, parentY:16
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 0
location2: x:9, y:18
in while<<
location: x:9, y:18
parentX:0, parentY:16
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
cross: 0
location2: x:18, y:18
in while<<
location: x:18, y:18
parentX:9, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 0
location2: x:19, y:18
in while<<
location: x:19, y:18
parentX:18, parentY:18
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
cross: 1
location2: x:19, y:17
in while<<
location: x:19, y:17
parentX:19, parentY:18
this node:	(19,17)	cost: 1000000000
	parent:       (19,18)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (10,17)
current NESW:        ( 1, 0, 1, 1)
mouse NESW:          ( 1, 1, 0, 1) head: 3

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(16,16),dir:1
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(16,16),dir:1

need to go to other node
queuedata.locationX:16 location[WIDTH]:10
queuedata.locationY:16 location[HEIGHT]:17
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
need to go to other node<<<
location: x:10, y:17
parentX:99, parentY:99
this node:	(10,17)	cost: 1000000000
	parent:       (19,17)   dir:1
cross: 10
location1: x:19, y:17
in while<<
location: x:19, y:17
parentX:10, parentY:17
this node:	(19,17)	cost: 1000000000
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
cross: 10
location1: x:19, y:18
in while<<
location: x:19, y:18
parentX:19, parentY:17
this node:	(19,18)	cost: 1000000000
	parent:       (18,18)   dir:3
cross: 10
location1: x:18, y:18
in while<<
location: x:18, y:18
parentX:19, parentY:18
this node:	(18,18)	cost: 1000000000
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
cross: 10
location1: x:9, y:18
in while<<
location: x:9, y:18
parentX:18, parentY:18
this node:	( 9,18)	cost: 1000000000
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
cross: 10
location1: x:0, y:16
in while<<
location: x:0, y:16
parentX:9, parentY:18
this node:	( 0,16)	cost: 1000000000
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
cross: 10
location1: x:3, y:16
in while<<
location: x:3, y:16
parentX:0, parentY:16
this node:	( 3,16)	cost: 1000000000
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
cross: 10
location1: x:3, y:0
in while<<
location: x:3, y:0
parentX:3, parentY:16
this node:	( 3, 0)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
cross: 1
location2: x:7, y:6
in while<<
location: x:7, y:6
parentX:3, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
cross: 0
location2: x:8, y:6
in while<<
location: x:8, y:6
parentX:7, parentY:6
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
cross: 0
location2: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:6
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
cross: 0
location2: x:8, y:10
in while<<
location: x:8, y:10
parentX:8, parentY:7
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 0
location2: x:12, y:16
in while<<
location: x:12, y:16
parentX:8, parentY:10
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
cross: 0
location2: x:16, y:16
in while<<
location: x:16, y:16
parentX:12, parentY:16
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (17, 9)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 1, 0, 0) head: 2

pushQ	(17, 9),dir:1

pushQ	(17, 9),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(7):
top
	(16,16),dir:2
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
	(17,9),dir:1
	(17,9),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(16,16),dir:2

need to go to other node
queuedata.locationX:16 location[WIDTH]:17
queuedata.locationY:16 location[HEIGHT]:9
Go parent!
found!
need to go to other node>>>
this node:	(16,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (17, 9)   dir:1
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
need to go to other node<<<
location: x:17, y:9
parentX:99, parentY:99
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
cross: 10
location1: x:16, y:16
in while<<
location: x:16, y:16
parentX:17, parentY:9
this node:	(16,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (17, 9)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    (13,12)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 1, 0, 0) head: 2

pushQ	(13,12),dir:1

pushQ	(13,12),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(8):
top
	(9,12),dir:1
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
	(17,9),dir:1
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	( 9,12),dir:1

this edge is searched
In dijkstra function.>>>
Print Queue(7):
top
	(9,12),dir:2
	(13,1),dir:0
	(13,1),dir:1
	(17,9),dir:1
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	( 9,12),dir:2

this edge is searched
In dijkstra function.>>>
Print Queue(6):
top
	(13,1),dir:0
	(13,1),dir:1
	(17,9),dir:1
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(13, 1),dir:0

need to go to other node
queuedata.locationX:13 location[WIDTH]:13
queuedata.locationY:1 location[HEIGHT]:12
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:1
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
need to go to other node<<<
location: x:13, y:12
parentX:99, parentY:99
this node:	(13,12)	cost: 1000000000
	parent:       (16,16)   dir:0
cross: 10
location1: x:16, y:16
in while<<
location: x:16, y:16
parentX:13, parentY:12
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
cross: 10
location1: x:12, y:16
in while<<
location: x:12, y:16
parentX:16, parentY:16
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
cross: 10
location1: x:8, y:10
in while<<
location: x:8, y:10
parentX:12, parentY:16
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 10
location1: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:10
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
cross: 10
location1: x:8, y:6
in while<<
location: x:8, y:6
parentX:8, parentY:7
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:8, parentY:6
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
cross: 1
location2: x:5, y:0
in while<<
location: x:5, y:0
parentX:7, parentY:6
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 0
location2: x:8, y:0
in while<<
location: x:8, y:0
parentX:5, parentY:0
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
cross: 0
location2: x:8, y:1
in while<<
location: x:8, y:1
parentX:8, parentY:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
cross: 0
location2: x:13, y:1
in while<<
location: x:13, y:1
parentX:8, parentY:1
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
cross: 10
go to dest
push new paths to queue
current location:    (16, 2)
current NESW:        ( 0, 1, 1, 0)
mouse NESW:          ( 1, 1, 0, 0) head: 1

pushQ	(16, 2),dir:0

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(13,1),dir:1
	(17,9),dir:1
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
	(16,2),dir:0
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(13, 1),dir:1

need to go to other node
queuedata.locationX:13 location[WIDTH]:16
queuedata.locationY:1 location[HEIGHT]:2
Go parent!
found!
need to go to other node>>>
this node:	(13, 1)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 2)   dir:0
this node:	(16, 2)	cost: 1000000000
	parent:       (13, 1)   dir:3
need to go to other node<<<
location: x:16, y:2
parentX:99, parentY:99
this node:	(16, 2)	cost: 1000000000
	parent:       (13, 1)   dir:3
cross: 10
location1: x:13, y:1
in while<<
location: x:13, y:1
parentX:16, parentY:2
this node:	(13, 1)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 2)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (16, 0)
current NESW:        ( 0, 0, 1, 1)
mouse NESW:          ( 1, 1, 0, 0) head: 2

pushQ	(16, 0),dir:1

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(17,9),dir:1
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
	(16,2),dir:0
	(16,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(17, 9),dir:1

need to go to other node
queuedata.locationX:17 location[WIDTH]:16
queuedata.locationY:9 location[HEIGHT]:0
Go parent!
Go parent!
Go parent!
Go parent!
Go parent!
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:0
go to cross:0
found!
need to go to other node>>>
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
need to go to other node<<<
location: x:16, y:0
parentX:99, parentY:99
this node:	(16, 0)	cost: 1000000000
	parent:       (13, 1)   dir:0
cross: 10
location1: x:13, y:1
in while<<
location: x:13, y:1
parentX:16, parentY:0
this node:	(13, 1)	cost: 1000000000
	parent:       ( 8, 1)   dir:3
cross: 10
location1: x:8, y:1
in while<<
location: x:8, y:1
parentX:13, parentY:1
this node:	( 8, 1)	cost: 1000000000
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
cross: 10
location1: x:8, y:0
in while<<
location: x:8, y:0
parentX:8, parentY:1
this node:	( 8, 0)	cost: 1000000000
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
cross: 10
location1: x:5, y:0
in while<<
location: x:5, y:0
parentX:8, parentY:0
this node:	( 5, 0)	cost: 1000000000
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
cross: 10
location1: x:7, y:6
in while<<
location: x:7, y:6
parentX:5, parentY:0
this node:	( 7, 6)	cost: 1000000000
	parent:       NULL
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
cross: 0
location2: x:8, y:6
in while<<
location: x:8, y:6
parentX:7, parentY:6
this node:	( 8, 6)	cost: 1000000000
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
cross: 0
location2: x:8, y:7
in while<<
location: x:8, y:7
parentX:8, parentY:6
this node:	( 8, 7)	cost: 1000000000
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
cross: 0
location2: x:8, y:10
in while<<
location: x:8, y:10
parentX:8, parentY:7
this node:	( 8,10)	cost: 1000000000
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
cross: 0
location2: x:12, y:16
in while<<
location: x:12, y:16
parentX:8, parentY:10
this node:	(12,16)	cost: 1000000000
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
cross: 0
location2: x:16, y:16
in while<<
location: x:16, y:16
parentX:12, parentY:16
this node:	(16,16)	cost: 1000000000
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
cross: 0
location2: x:17, y:9
in while<<
location: x:17, y:9
parentX:16, parentY:16
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (19, 9)
current NESW:        ( 0, 1, 1, 1)
mouse NESW:          ( 1, 1, 0, 1) head: 2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(5):
top
	(17,9),dir:2
	(13,12),dir:1
	(13,12),dir:2
	(16,2),dir:0
	(16,0),dir:1
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(17, 9),dir:2

need to go to other node
queuedata.locationX:17 location[WIDTH]:19
queuedata.locationY:9 location[HEIGHT]:9
Go parent!
found!
need to go to other node>>>
this node:	(17, 9)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19, 9)   dir:1
this node:	(19, 9)	cost: 1000000000
	parent:       (17, 9)   dir:0
need to go to other node<<<
location: x:19, y:9
parentX:99, parentY:99
this node:	(19, 9)	cost: 1000000000
	parent:       (17, 9)   dir:0
cross: 10
location1: x:17, y:9
in while<<
location: x:17, y:9
parentX:19, parentY:9
this node:	(17, 9)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19, 9)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    (17, 8)
current NESW:        ( 0, 0, 0, 1)
mouse NESW:          ( 0, 1, 0, 0) head: 2

pushQ	(17, 8),dir:1

pushQ	(17, 8),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(6):
top
	(13,12),dir:1
	(13,12),dir:2
	(16,2),dir:0
	(16,0),dir:1
	(17,8),dir:1
	(17,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(13,12),dir:1

need to go to other node
queuedata.locationX:13 location[WIDTH]:17
queuedata.locationY:12 location[HEIGHT]:8
Go parent!
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	(16,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
this node:	(13,12)	cost: 1000000000
	parent:       (16,16)   dir:0
need to go to other node<<<
location: x:17, y:8
parentX:99, parentY:99
this node:	(17, 8)	cost: 1000000000
	parent:       (17, 9)   dir:0
cross: 10
location1: x:17, y:9
in while<<
location: x:17, y:9
parentX:17, parentY:8
this node:	(17, 9)	cost: 1000000000
	parent:       (16,16)   dir:0
cross: 10
location1: x:16, y:16
in while<<
location: x:16, y:16
parentX:17, parentY:9
this node:	(16,16)	cost: 1000000000
	parent:       NULL
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
cross: 1
location2: x:13, y:12
in while<<
location: x:13, y:12
parentX:16, parentY:16
this node:	(13,12)	cost: 1000000000
	parent:       (16,16)   dir:0
cross: 10
go to dest
push new paths to queue
current location:    (16, 4)
current NESW:        ( 0, 1, 1, 1)
mouse NESW:          ( 1, 1, 0, 1) head: 2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
	cross[0]:    (16, 4)   dir:1
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(5):
top
	(13,12),dir:2
	(16,2),dir:0
	(16,0),dir:1
	(17,8),dir:1
	(17,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
	cross[0]:    (16, 4)   dir:1
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(13,12),dir:2

need to go to other node
queuedata.locationX:13 location[WIDTH]:16
queuedata.locationY:12 location[HEIGHT]:4
Go parent!
found!
need to go to other node>>>
this node:	(13,12)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 4)   dir:1
this node:	(16, 4)	cost: 1000000000
	parent:       (13,12)   dir:0
need to go to other node<<<
location: x:16, y:4
parentX:99, parentY:99
this node:	(16, 4)	cost: 1000000000
	parent:       (13,12)   dir:0
cross: 10
location1: x:13, y:12
in while<<
location: x:13, y:12
parentX:16, parentY:4
this node:	(13,12)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 4)   dir:1
cross: 10
go to dest
do the min path algo
the cost of node:(16, 2), cost:53
the cost of node:(16, 2), cost:50
crossPoint:
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
tree:
this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
	cross[0]:    (16, 4)   dir:1
treeParent:
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	cross[1]:    (13,12)   dir:2

this node:	(13,12)	cost: 13
	parent:       (16,16)   dir:0
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0

this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(4):
top
	(16,2),dir:0
	(16,0),dir:1
	(17,8),dir:1
	(17,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(16, 2),dir:0

this edge is searched
In dijkstra function.>>>
Print Queue(3):
top
	(16,0),dir:1
	(17,8),dir:1
	(17,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(16, 0),dir:1

need to go to other node
queuedata.locationX:16 location[WIDTH]:16
queuedata.locationY:0 location[HEIGHT]:2
Go parent!
go to cross:1
found!
need to go to other node>>>
this node:	(13, 1)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 1000000000
	parent:       (13, 1)   dir:3
this node:	(16, 0)	cost: 1000000000
	parent:       (13, 1)   dir:0
need to go to other node<<<
location: x:16, y:2
parentX:99, parentY:99
this node:	(16, 2)	cost: 1000000000
	parent:       (13, 1)   dir:3
cross: 10
location1: x:13, y:1
in while<<
location: x:13, y:1
parentX:16, parentY:2
this node:	(13, 1)	cost: 1000000000
	parent:       NULL
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1
cross: 1
location2: x:16, y:0
in while<<
location: x:16, y:0
parentX:13, parentY:1
this node:	(16, 0)	cost: 1000000000
	parent:       (13, 1)   dir:0
cross: 10
go to dest
do the min path algo
the cost of node:(17, 8), cost:50
the cost of node:(17, 8), cost:49
crossPoint:
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
tree:
this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
treeParent:
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	cross[1]:    (16, 0)   dir:1

this node:	(16, 0)	cost: 4
	parent:       (13, 1)   dir:0
	unchoose[0]:    (13, 1)   dir:0

this node:	(16, 0)	cost: 4
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
change the cross!1
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(2):
top
	(17,8),dir:1
	(17,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(17, 8),dir:1

push new paths to queue
current location:    (18, 8)
current NESW:        ( 1, 0, 0, 0)
mouse NESW:          ( 0, 0, 0, 1) head: 1

pushQ	(18, 8),dir:1

pushQ	(18, 8),dir:2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(3):
top
	(17,8),dir:2
	(18,8),dir:1
	(18,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(17, 8),dir:2

this edge is searched
In dijkstra function.>>>
Print Queue(2):
top
	(18,8),dir:1
	(18,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(18, 8),dir:1

push new paths to queue
current location:    (19, 0)
current NESW:        ( 0, 1, 2, 1)
mouse NESW:          ( 2, 1, 0, 1) head: 2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
	cross[0]:    (19, 0)   dir:1
this node:	(19, 0)	cost: 9
	parent:       (18, 8)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(1):
top
	(18,8),dir:2
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
	cross[0]:    (19, 0)   dir:1
this node:	(19, 0)	cost: 9
	parent:       (18, 8)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
popQ	(18, 8),dir:2

need to go to other node
queuedata.locationX:18 location[WIDTH]:19
queuedata.locationY:8 location[HEIGHT]:0
Go parent!
found!
need to go to other node>>>
this node:	(18, 8)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19, 0)   dir:1
this node:	(19, 0)	cost: 1000000000
	parent:       (18, 8)   dir:0
need to go to other node<<<
location: x:19, y:0
parentX:99, parentY:99
this node:	(19, 0)	cost: 1000000000
	parent:       (18, 8)   dir:0
cross: 10
location1: x:18, y:8
in while<<
location: x:18, y:8
parentX:19, parentY:0
this node:	(18, 8)	cost: 1000000000
	parent:       NULL
	cross[0]:    (19, 0)   dir:1
cross: 10
go to dest
push new paths to queue
current location:    (18, 0)
current NESW:        ( 0, 1, 1, 1)
mouse NESW:          ( 1, 1, 0, 1) head: 2

out dijkstra>>>
this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
	cross[0]:    (19, 0)   dir:1
	cross[1]:    (18, 0)   dir:2
this node:	(19, 0)	cost: 9
	parent:       (18, 8)   dir:0
this node:	(18, 0)	cost: 8
	parent:       (18, 8)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
out dijkstra<<<
In dijkstra function.>>>
Print Queue(0):
top
tail

this node:	( 0, 0)	cost: 0
	parent:       NULL
	cross[0]:    ( 0,10)   dir:0
	cross[1]:    ( 3, 0)   dir:1
this node:	( 0,10)	cost: 10
	parent:       ( 0, 0)   dir:2
	unchoose[0]:    ( 0,16)   dir:1
this node:	( 3, 0)	cost: 3
	parent:       ( 0, 0)   dir:3
	cross[0]:    ( 3,16)   dir:0
	cross[1]:    ( 7, 6)   dir:1
this node:	( 3,16)	cost: 16
	parent:       ( 3, 0)   dir:2
	cross[0]:    ( 0,16)   dir:3
	cross[1]:    ( 4,16)   dir:1
this node:	( 0,16)	cost: 3
	parent:       ( 3,16)   dir:1
	cross[0]:    ( 9,18)   dir:0
	unchoose[0]:    ( 0,10)   dir:2
this node:	( 9,18)	cost: 11
	parent:       ( 0,16)   dir:2
	cross[0]:    (18,18)   dir:1
	cross[1]:    ( 0,18)   dir:3
this node:	(18,18)	cost: 9
	parent:       ( 9,18)   dir:3
	cross[0]:    (19,18)   dir:1
this node:	(19,18)	cost: 1
	parent:       (18,18)   dir:3
	cross[0]:    (19,19)   dir:0
	cross[1]:    (19,17)   dir:2
this node:	(19,19)	cost: 1
	parent:       (19,18)   dir:2
	cross[0]:    ( 0,19)   dir:3
this node:	( 0,19)	cost: 19
	parent:       (19,19)   dir:1
	unchoose[0]:    ( 0,18)   dir:2
this node:	(19,17)	cost: 1
	parent:       (19,18)   dir:0
	cross[0]:    (10,17)   dir:3
this node:	(10,17)	cost: 9
	parent:       (19,17)   dir:1
this node:	( 0,18)	cost: 9
	parent:       ( 9,18)   dir:1
	unchoose[0]:    ( 0,19)   dir:0
this node:	( 4,16)	cost: 1
	parent:       ( 3,16)   dir:3
	cross[0]:    (99,99)   dir:99
	unchoose[0]:    ( 8,10)   dir:1
this node:	( 7, 9)	cost: 10
	parent:       ( 4,16)   dir:3
this node:	( 7, 6)	cost: 18
	parent:       ( 3, 0)   dir:3
	cross[0]:    ( 8, 6)   dir:1
	cross[1]:    ( 5, 0)   dir:2
this node:	( 8, 6)	cost: 1
	parent:       ( 7, 6)   dir:3
	cross[0]:    ( 8, 7)   dir:0
	cross[1]:    ( 8, 2)   dir:2
this node:	( 8, 7)	cost: 1
	parent:       ( 8, 6)   dir:2
	cross[0]:    ( 8,10)   dir:0
	cross[1]:    (12, 7)   dir:1
this node:	( 8,10)	cost: 3
	parent:       ( 8, 7)   dir:2
	cross[0]:    (12,16)   dir:0
	unchoose[0]:    ( 4,16)   dir:3
this node:	(12,16)	cost: 10
	parent:       ( 8,10)   dir:3
	cross[0]:    (16,16)   dir:1
	cross[1]:    ( 9,12)   dir:2
this node:	(16,16)	cost: 4
	parent:       (12,16)   dir:3
	cross[0]:    (17, 9)   dir:1
	unchoose[0]:    (13,12)   dir:2
this node:	(17, 9)	cost: 8
	parent:       (16,16)   dir:0
	cross[0]:    (19, 9)   dir:1
	cross[1]:    (17, 8)   dir:2
this node:	(19, 9)	cost: 16
	parent:       (17, 9)   dir:0
this node:	(17, 8)	cost: 1
	parent:       (17, 9)   dir:0
	cross[0]:    (16, 0)   dir:2
	cross[1]:    (18, 8)   dir:1
this node:	(16, 0)	cost: 9
	parent:       (17, 8)   dir:1
	unchoose[0]:    (13, 1)   dir:0
this node:	(18, 8)	cost: 1
	parent:       (17, 8)   dir:3
	cross[0]:    (19, 0)   dir:1
	cross[1]:    (18, 0)   dir:2
this node:	(19, 0)	cost: 9
	parent:       (18, 8)   dir:0
this node:	(18, 0)	cost: 8
	parent:       (18, 8)   dir:0
this node:	( 9,12)	cost: 13
	parent:       (12,16)   dir:0
	cross[0]:    ( 9, 8)   dir:2
	unchoose[0]:    (12, 7)   dir:1
this node:	( 9, 8)	cost: 4
	parent:       ( 9,12)   dir:0
this node:	(12, 7)	cost: 4
	parent:       ( 8, 7)   dir:3
	cross[0]:    (12, 2)   dir:2
	unchoose[0]:    ( 9,12)   dir:0
this node:	(12, 2)	cost: 17
	parent:       (12, 7)   dir:0
	unchoose[0]:    ( 8, 2)   dir:3
this node:	( 8, 2)	cost: 4
	parent:       ( 8, 6)   dir:0
	unchoose[0]:    (12, 2)   dir:1
this node:	( 5, 0)	cost: 16
	parent:       ( 7, 6)   dir:0
	cross[0]:    ( 8, 0)   dir:1
this node:	( 8, 0)	cost: 3
	parent:       ( 5, 0)   dir:3
	cross[0]:    ( 8, 1)   dir:0
	cross[1]:    ( 9, 0)   dir:1
this node:	( 8, 1)	cost: 1
	parent:       ( 8, 0)   dir:2
	cross[0]:    (13, 1)   dir:1
this node:	(13, 1)	cost: 5
	parent:       ( 8, 1)   dir:3
	cross[0]:    (16, 2)   dir:0
	unchoose[0]:    (16, 0)   dir:1
this node:	(16, 2)	cost: 4
	parent:       (13, 1)   dir:3
	cross[0]:    (13,12)   dir:0
this node:	(13,12)	cost: 13
	parent:       (16, 2)   dir:2
	cross[0]:    (16, 4)   dir:1
	unchoose[0]:    (16,16)   dir:0
this node:	(16, 4)	cost: 27
	parent:       (13,12)   dir:0
this node:	( 9, 0)	cost: 1
	parent:       ( 8, 0)   dir:3
	cross[0]:    (15, 0)   dir:1
this node:	(15, 0)	cost: 6
	parent:       ( 9, 0)   dir:3
In dijkstra function.<<<
finish search
